def get_product_manager_prompt(product):
    prompt = (
f"Create a sequence of small discrete steps to build the product: {product}\n"
        "InstructGPT has limitations and receives one step at a time. Provide all necessary information at each step for communication between steps. All code is written in Python3.\n\n"
        "Each step must be small enough for InstructGPT to complete in a single response. If a step is too large, break it down into smaller sub-steps.\n\n"
        "Each step must include:\n"
        "1. A unique file to write the python code for the step.\n"
        "2. Functions or objects with methods and their type-annotated parameters to write in the step.\n"
        "3. Functions or objects with methods and their type-annotated parameters from previous steps that are necessary for the current step.\n"
        "4. A natural language description starting with 'Write code to' and explaining how to use the previous step's functions or objects. This description must be extremely detailed and must not assume context between steps. No information is passed between code generation steps.\n"
        "5. Guidelines to ensure high code quality (e.g. type annotations, readability, efficiency).\n"
        "The last step must define a 'main' file with a 'main' function to run the program.\n\n"
        "Provide steps in JSON format:\n"
         "[\n"
        "  {\n"
        "    \"n\": int,\n"
        "    \"file\": \"string\",\n"
        "    \"functions_to_write\": [\n"
        "      {\n"
        "        \"type\": \"function\",\n"
        "        \"name\": \"string\",\n"
        "        \"parameters\": [\n"
        "          {\n"
        "            \"name\": \"string\",\n"
        "            \"type\": \"string\"\n"
        "          }\n"
        "        ],\n"
        "        \"return_type\": \"string\"\n"
        "      },\n"
        "      {\n"
        "        \"type\": \"object\",\n"
        "        \"name\": \"string\",\n"
        "        \"methods\": [\n"
        "          {\n"
        "            \"name\": \"string\",\n"
        "            \"parameters\": [\n"
        "              {\n"
        "                \"name\": \"string\",\n"
        "                \"type\": \"string\"\n"
        "              }\n"
        "            ],\n"
        "            \"return_type\": \"string\"\n"
        "          }\n"
        "        ]\n"
        "      }\n"
        "    ],\n"
        "    \"available_functions\": [\n"
        "      {\n"
        "        \"module\": \"string\",\n"
        "        \"functions\": [\n"
        "          {\n"
        "            \"name\": \"string\",\n"
        "            \"parameters\": [\n"
        "              {\n"
        "                \"name\": \"string\",\n"
        "                \"type\": \"string\"\n"
        "              }\n"
        "            ],\n"
        "            \"return_type\": \"string\"\n"
        "          }\n"
        "        ],\n"
        "        \"objects\": [\n"
        "          {\n"
        "            \"name\": \"string\",\n"
        "            \"methods\": [\n"
        "              {\n"
        "                \"name\": \"string\",\n"
        "                \"parameters\": [\n"
        "                  {\n"
        "                    \"name\": \"string\",\n"
        "                    \"type\": \"string\"\n"
        "                  }\n"
        "                ],\n"
        "                \"return_type\": \"string\"\n"
        "              }\n"
        "            ]\n"
        "          }\n"
        "        ]\n"
        "      }\n"
        "    ],\n"
        "    \"description\": \"Write code to...\",\n"
        "    \"guidelines\": \"...\",\n"
        "    \"language\": \"...\"\n"
        "  }\n"
        "]"
        "You must provide your response in the above format. Your response must be valid JSON."
   )
    return prompt

def get_developer_code_prompt(step):
    prompt = (
        f"Write the code to perform this step:\n"
        f"  - Description: {step['description']} (specific task)\n"
        f"  - Product: {step['product']} (overall product)\n"
        f"  - Code: {step['file']}\n"
        f"  - Functions to write: {step['functions_to_write']}\n"
        f"  - Available functions: {step['available_functions']}\n"
        f"  - Guidelines: {step['guidelines']}\n\n"
        f"Use type annotations and write performant and efficient code.\n"
        f"Please provide the response in the following JSON format:\n"
        f"{{\n"
        f"  \"action\": \"write\",\n"
        f"  \"environment\": \"python3\",\n"
        f"  \"code\": [\n"
        f"    {{\n"
        f"      \"filename\": \"string\",\n"
        f"      \"content\": \"string\"\n"
        f"    }}\n"
        f"  ],\n"
        f"  \"tests\": [\n"
        f"    {{\n"
        f"      \"filename\": \"string\",\n"
        f"      \"content\": \"string\"\n"
        f"    }}\n"
        f"  ]\n"
        f"}}\n\n"
        f"Write a test for each function that you write, put tests for {{file}} in test_{{file}}."
        f"Ensure that your response is formatted as JSON and adheres to the specified structure."
    )
    return prompt



def get_developer_error_prompt(developer_code_prompt, remote_agent_code, stderr):
    return (
        f"Previously, you received the following instructions:\n"
        f"{developer_code_prompt}\n\n"
        f"You provided the following code:\n"
        f"{remote_agent_code}\n\n"
        f"However, an error occurred while running the code:\n"
        f"{stderr}\n\n"
        f"Please rewrite the code to fix the error. You can modify any of the existing files or add new files as needed. Make sure your revised code is free of errors and follows best coding practices.\n\n"
        f"Return your response in the following JSON format:\n"
        f"{{\n"
        f"  \"action\": \"write\",\n"
        f"  \"environment\": \"python3\",\n"
        f"  \"code\": [\n"
        f"    {{\n"
        f"      \"filename\": \"string\",\n"
        f"      \"content\": \"string\"\n"
        f"    }}\n"
        f"  ],\n"
        f"  \"tests\": [\n"
        f"    {{\n"
        f"      \"filename\": \"string\",\n"
        f"      \"content\": \"string\"\n"
        f"    }}\n"
        f"  ]\n"
        f"}}\n"
        f"Write a test for each function that you write, put tests for {{file}} in test_{{file}}."
        f"You must provide your response as valid JSON."
    )

